type Message {
  sender: String!
  body: String!
  receiver: String!
}

type Register {
  account: String!
  password: String!
}

type Schedule {
  user: String!
  start: String!
  end: String!
  color: String!
  title: String!
  content: String
}

type Query {
  Messages(query: String): [Message!]!
  Registers(query: String): [Register!]!
  Schedules(query: String): [Schedule!]!
}

type Mutation {
  CreateMessage(data: CreateMessageInput!): Message!
  DeleteMessage(data: String): String
  CreateRegister(data: CreateRegisterInput!): Register!
  CreateSchedule(data: CreateScheduleInput!): Schedule!
}

input CreateMessageInput {
  sender: String!
  body: String!
  receiver: String!
}

input CreateRegisterInput {
  account: String!
  password: String!
}

input CreateScheduleInput {
  user: String!
  start: String!
  end: String!
  color: String!
  title: String!
  content: String
}

type Subscription {
  Message(username: String): Message!
  Schedule(user: String!): Schedule!
}

